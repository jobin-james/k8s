name: Folder-Specific Tagging and Releases

on:
  push:
    branches:
      - master  # Trigger on pushes to the main branch
  workflow_dispatch:  # Manual trigger for testing or special cases

jobs:
  detect-changes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure we fetch the full commit history for tags

      - name: Determine Changed Folder
        id: folder
        run: |
          # Check for changes in folder1 and folder2
          folder1_changed=$(git diff --name-only HEAD~1 HEAD | grep -q '^folder1/' && echo "true" || echo "false")
          folder2_changed=$(git diff --name-only HEAD~1 HEAD | grep -q '^folder2/' && echo "true" || echo "false")

          echo "folder1_changed=$folder1_changed" >> $GITHUB_ENV
          echo "folder2_changed=$folder2_changed" >> $GITHUB_ENV

          # Output to console for debugging
          echo "Folder1 Changed: $folder1_changed"
          echo "Folder2 Changed: $folder2_changed"

      - name: Print Result
        run: |
          if [[ "${{ env.folder1_changed }}" == "true" ]]; then
            echo "Changes detected in folder1"
          elif [[ "${{ env.folder2_changed }}" == "true" ]]; then
            echo "Changes detected in folder2"
          else
            echo "No relevant changes detected"
            exit 0
          fi

      - name: Determine Next Version and Create Tag
        if: env.folder1_changed == 'true' || env.folder2_changed == 'true'
        id: version
        run: |
          # Determine which folder changed and set the prefix
          if [[ "${{ env.folder1_changed }}" == "true" ]]; then
            folder="folder1"
          elif [[ "${{ env.folder2_changed }}" == "true" ]]; then
            folder="folder2"
          fi

          # Get the latest tag for the folder
          latest_tag=$(git tag --list "${folder}/v*" | sort -V | tail -n 1 || echo "${folder}/v0.0.0")
          echo "Latest tag: $latest_tag"

          # Extract major, minor, patch from the latest tag
          if [[ $latest_tag =~ ^${folder}/v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            major=${BASH_REMATCH[1]}
            minor=${BASH_REMATCH[2]}
            patch=${BASH_REMATCH[3]}
          else
            major=0
            minor=0
            patch=0
          fi

          # Increment the patch version
          new_tag="${folder}/v$major.$minor.$((patch + 1))"
          echo "New tag: $new_tag"
          echo "tag=$new_tag" >> $GITHUB_ENV

      - name: Create Tag
        if: env.folder1_changed == 'true' || env.folder2_changed == 'true'
        run: |
          git tag ${{ env.tag }}
          git push origin ${{ env.tag }}

      - name: Create GitHub Release
        if: env.folder1_changed == 'true' || env.folder2_changed == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ env.tag }} \
              --repo="$GITHUB_REPOSITORY" \
              --title="Release ${{ env.tag }}" \
              --generate-notes
